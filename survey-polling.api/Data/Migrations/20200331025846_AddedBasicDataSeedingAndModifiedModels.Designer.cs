// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using survey_polling.api.Data;

namespace survey_polling.api.Data.Migrations
{
    [DbContext(typeof(PollContext))]
    [Migration("20200331025846_AddedBasicDataSeedingAndModifiedModels")]
    partial class AddedBasicDataSeedingAndModifiedModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("survey_polling.api.Models.Lobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActiveQuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActiveQuestionId")
                        .IsUnique()
                        .HasFilter("[ActiveQuestionId] IS NOT NULL");

                    b.HasIndex("PollId");

                    b.ToTable("Lobby");
                });

            modelBuilder.Entity("survey_polling.api.Models.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Option");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Nothing",
                            PollId = 1,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Greater than or equal to",
                            PollId = 1,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Lambda",
                            PollId = 1,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "1",
                            PollId = 1,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "2",
                            PollId = 1,
                            QuestionId = 2
                        });
                });

            modelBuilder.Entity("survey_polling.api.Models.Poll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("Poll");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HostId = 1,
                            Title = "Test poll #1"
                        },
                        new
                        {
                            Id = 2,
                            HostId = 1,
                            Title = "Test poll #2"
                        });
                });

            modelBuilder.Entity("survey_polling.api.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PollId = 1,
                            Title = "What is this symbol: =>"
                        },
                        new
                        {
                            Id = 2,
                            PollId = 1,
                            Title = "What is 4/2?"
                        },
                        new
                        {
                            Id = 3,
                            PollId = 2,
                            Title = "What is 1+1?"
                        });
                });

            modelBuilder.Entity("survey_polling.api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsHost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("LobbyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LobbyId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsHost = true
                        },
                        new
                        {
                            Id = 2,
                            IsHost = false
                        });
                });

            modelBuilder.Entity("survey_polling.api.Models.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("PollId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Vote");
                });

            modelBuilder.Entity("survey_polling.api.Models.Lobby", b =>
                {
                    b.HasOne("survey_polling.api.Models.Question", "ActiveQuestion")
                        .WithOne()
                        .HasForeignKey("survey_polling.api.Models.Lobby", "ActiveQuestionId");

                    b.HasOne("survey_polling.api.Models.Poll", "Poll")
                        .WithMany("Lobbies")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("survey_polling.api.Models.Option", b =>
                {
                    b.HasOne("survey_polling.api.Models.Poll", "Poll")
                        .WithMany()
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("survey_polling.api.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("survey_polling.api.Models.Poll", b =>
                {
                    b.HasOne("survey_polling.api.Models.User", "Host")
                        .WithMany()
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("survey_polling.api.Models.Question", b =>
                {
                    b.HasOne("survey_polling.api.Models.Poll", "Poll")
                        .WithMany("Questions")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("survey_polling.api.Models.User", b =>
                {
                    b.HasOne("survey_polling.api.Models.Lobby", null)
                        .WithMany("Users")
                        .HasForeignKey("LobbyId");
                });

            modelBuilder.Entity("survey_polling.api.Models.Vote", b =>
                {
                    b.HasOne("survey_polling.api.Models.Option", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("survey_polling.api.Models.Poll", "Poll")
                        .WithMany()
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("survey_polling.api.Models.Question", "Question")
                        .WithMany("Votes")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
